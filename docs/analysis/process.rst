Process File
==============================

Introduction
-------------
Once you have an :ref:`emap <emap>` object generated by a successful parse, you can construct the graph
theory model of your protein crystal structure. The way this graph is constructed is 
extremely flexible and customizable. Each edge connecting two vertices is assigned a weight:

.. math::
   P'=-log_{10}(\epsilon)

where :math:`\epsilon` is a distance-dependent hopping penalty function:

.. math::
   \epsilon = \alpha \exp(-\beta(R-R_{offset}))

You can specify custom fragments atom by atom using the "custom" optional argument,
which takes a string formatted in pyemap's custom fragment selection syntax, which is 
based on PDB atom serial number. The syntax is summarized below:

+------------------------------------------------+
|          Syntax                                |
+=============+==================================+
| ","         | defines discrete range of atoms  |
+-------------+----------------------------------+
|"-"          | defines continuous range of atoms|
+-------------+----------------------------------+
| "()"        | encloses atom range              |
+-------------+----------------------------------+
|"(...),(...)"| defines multiple custom fragments|
+-------------+----------------------------------+



Process
-------
.. automodule:: pyemap.process_data
   :members: process

Example
--------

   >>> import pyemap
   >>> my_emap = pyemap.fetch_and_parse("1u3d")
   >>> pyemap.process(my_emap,eta_moieties=["ANP511(A)"],custom="(3960-3969),(3970-3980,3982,3984-3987)")
   >>> my_emap.init_graph_to_Image().show()

.. image:: images/custom.png


